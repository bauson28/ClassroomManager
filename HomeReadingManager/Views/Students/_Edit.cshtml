@model HomeReadingManager.ViewModels.StudentEdit

@{
    ViewBag.Title = "EditStudent";
    //Layout = "~/Views/Shared/_ModalPopup.cshtml";
}
@using (Html.BeginForm("Edit", "Students", FormMethod.Post))
{
<div class="modal-body">
    <div class="alert alert-warning">
       
            <h4>Edit details for&nbsp; @Html.DisplayFor(m=>m.FullName)</h4>

                @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Classes_Id, new { id = "classId" })
                    @Html.HiddenFor(m => m.SortOrder, new { id = "sortOrder" })
                    @Html.HiddenFor(m => m.Ascending, new { id = "ascending" })
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => Model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.FirstName, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                            @Html.ValidationMessageFor(model => Model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.LastName, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })
                            @Html.ValidationMessageFor(model => Model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.DropDownListFor(m=>Model.Gender, new List<SelectListItem>{
                                    new SelectListItem{ Text="Not set", Value=""},
                                    new SelectListItem{ Text="Boy", Value="M"},
                                    new SelectListItem{ Text="Girl", Value="F"}
                                    })
                            </div>
                            @Html.ValidationMessageFor(model => Model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.Classes_Id, "Class", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @*@Html.DropDownListFor(model => model.Classes_Id, (IEnumerable<SelectListItem>)ViewBag.Classes_Id)*@
                            @Html.DropDownListFor(m => Model.Classes_Id, new SelectList(Model.ClassList, "Id", "ClassName", Model.Classes_Id))

                            @Html.ValidationMessageFor(model => Model.Classes_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.GradeId, "Grade", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => Model.GradeId, new SelectList(Model.GradesList, "Id", "Grade", Model.GradeId))

                            @Html.ValidationMessageFor(model => Model.GradeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.Levels_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => Model.Levels_Id, new SelectList(Model.LevelsList, "Id", "Level", Model.Levels_Id), "Not set")

                            @Html.ValidationMessageFor(model => Model.Levels_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.SRN, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.SRN, new { htmlAttributes = new { @class = "form-control", @maxlength = "12" } })
                            @Html.ValidationMessageFor(model => Model.SRN, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.Inactive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            <div class="checkbox">
                                @Html.EditorFor(model => Model.Inactive)
                                @Html.ValidationMessageFor(model => Model.Inactive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-1">
                            <input type="submit" value="Save" class="btn btn-primary closeModel" id="approve-btn" style="width:70px" />
                        </div>
                        <div class="col-md-offset-1 col-md-8">
                            <button type="button" class="btn btn-warning closeModel" data-dismiss="modal" style="width:70px">
                                Cancel
                            </button>
                        </div>
                    </div>
                </div>
            
    </div>
</div>
        }
@section Scripts
{
   
    @Scripts.Render("~/bundles/jqueryval")
  


}
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $('#approve-btn').on('click', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();
                this.form.submit();
            });
        });


    });
</script>


