@model HomeReadingManager.ViewModels.ClassEdit

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Edit class &nbsp;@Html.DisplayFor(model => model.ClassDesc)</h2>
        <hr />
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Classes_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ClassDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Stage, new SelectList(Model.Stages, "Key", "Value"))
                @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Teacher_Id, new SelectList(Model.Teachers, "Id", "Teacher", Model.Teacher_Id), "Not set")
                @Html.ValidationMessageFor(model => model.Teacher_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher2Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => Model.Teacher2Id, new SelectList(Model.Teachers, "Id", "Teacher", Model.Teacher2Id), "Not set")
                @Html.ValidationMessageFor(model => model.Teacher2Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Obsolete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Obsolete)
                    @Html.ValidationMessageFor(model => model.Obsolete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
         
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save changes" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to list", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
