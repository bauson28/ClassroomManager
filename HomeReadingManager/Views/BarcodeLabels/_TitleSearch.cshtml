
@using HomeReadingManager.MyClasses
@model HomeReadingManager.ViewModels.LabelTitleList
@using PagedList.Mvc;
@using PagedList;

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Select Title</h4>
</div>


@using (Html.BeginForm())
{
    <div class="modal-body">

        <table class="table">
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Titles.FirstOrDefault().Title)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Titles.FirstOrDefault().Isbn)
                </th>
                <th>
                    Reading Level
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Titles)
            {
                <tr>
                    <td>
                        @{
                if (item.Image_Id > 0)
                {
                    string imageBase64 = Convert.ToBase64String(item.Jacket);
                    string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                    <img src="@imageSrc" width="50" height="70" />
                }
                else
                {
                    <img src="~/Images/NoJacket1.jpg" width="50" height="70" />
                }
                        }
                    </td>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.Isbn
                    </td>
                    <td>
                        @item.ReadLevel
                    </td>
                    <td>
                        @Html.ActionLink("Select", "Index", new { productId = item.Product_Id, returnsView = false, onclick = "javascript:SelectTitle();" })
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager((IPagedList)Model.Titles, page => Url.Action("Index", new { returnsView = false, page = page, searchString = Model.SearchString }))

    </div>
    <div class="modal-footer">

        @Html.ActionLink("Clear search", "Index", new { returnsView = false }, new { @class = "btn btn-default" });
    </div>
}














